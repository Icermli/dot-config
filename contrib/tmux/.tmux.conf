# https://github.com/tmux/tmux/issues/1246
set -g default-terminal "screen-256color"
set -g default-command "${SHELL}"
set -ga terminal-overrides ",*256col*:Tc"

# custom prefix
unbind C-b
set -g prefix 'C-Space'
bind-key 'C-b' send-prefix  # when using tmux in tmux (e.g. ssh to a remote)
set -g escape-time 0           # no delay after escape, for more responsive vim

set -g history-limit 100000
setw -g mode-keys vi
set -g mouse on

set -g repeat-time 1000

setw -g monitor-activity on
set -g visual-activity on

set -g renumber-windows on
set -g automatic-rename on

bind -T copy-mode-vi Enter send-keys -X copy-pipe-and-cancel "xclip -i -f -selection primary | xclip -i -selection clipboard"
bind -T copy-mode-vi y send-keys -X copy-pipe "xclip -i -f -selection primary | xclip -i -selection clipboard"

unbind -T copy-mode MouseDragEnd1Pane
bind-key -T copy-mode-vi MouseDragEnd1Pane send -X copy-pipe-and-cancel "xclip -in -selection clipboard"

set -g display-panes-time 800
set -g display-time 1000
setw -g aggressive-resize on

set-option -g status on
set -g status-position bottom
set -g status-style "dim"
set -g status-interval 2
set -g status-justify left

set -g status-left-length 50
set -g status-left ' '

set -g status-right-length 60
set -g status-right '#[fg=colour233,bg=colour241,bold] %d/%m #[fg=colour233,bg=colour245,bold] %H:%M:%S '

if-shell "test -f ~/cli-utils/tmuxline" "source ~/cli-utils/tmuxline"
if-shell "test -f ~/.tmux-status.conf" "source ~/.tmux-status.conf"

set -g message-style "bold"
setw -g mode-style "bold"

bind ` send-keys C-l \; run 'tmux clear-history'

is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"

# works with vim plugin to provide unified moving
bind h if-shell "$is_vim" "send-keys :TmuxNavigateLeft Enter"  "select-pane -L"
bind j if-shell "$is_vim" "send-keys :TmuxNavigateDown Enter"  "select-pane -D"
bind k if-shell "$is_vim" "send-keys :TmuxNavigateUp Enter"  "select-pane -U"
bind l if-shell "$is_vim" "send-keys :TmuxNavigateRight Enter"  "select-pane -R"
bind \\ if-shell "$is_vim" "send-keys :TmuxNavigatePrevious Enter" "select-pane -l"

bind H resize-pane -L 5
bind J resize-pane -D 5
bind K resize-pane -U 5
bind L resize-pane -R 5

bind m select-pane -t 2 \; \
  send-keys q C-c C-m clear C-m \
  tmux Space clear-history C-m \
  Up Up Up C-m \; \
  last-pane

bind p \
if-shell 'tmux select-window -t :1' '' 'move-window -t :1' \; \
if-shell 'test $(tmux list-panes | wc -l) -gt 1' '' 'split-window -h' \; \
if-shell 'tmux select-window -t :2' '' 'new-window' \; \
select-window -t 1 \; \
select-pane -t 2 \; \
join-pane -t 2.1 \; \
select-pane -U \; \
join-pane -h -t 1.1 \; \
last-pane

set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'tmux-plugins/tmux-resurrect'
set -g @plugin 'tmux-plugins/tmux-open'

run '~/.tmux/plugins/tpm/tpm'
